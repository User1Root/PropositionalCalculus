<Page x:Class="LogicStatementsUI.LogicStatementPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:local="clr-namespace:LogicStatementsUI"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"
      Title="LogicStatementPage"
      Background="CadetBlue" >
    <Page.Resources>
        <Style x:Key="textBoxStyle" TargetType="{x:Type TextBox}">
            <Setter Property="TextBox.Background" Value="LightGreen"/>
            <Setter Property ="TextBox.Foreground" Value="Black" />
            <Setter Property="TextBox.FontFamily" Value="Calibri"/>
            <Setter Property="TextBox.FontSize" Value="18"/>
            <Setter Property="TextBox.FontWeight" Value="Bold" />
            <Setter Property="TextBox.IsReadOnly" Value="True" />


            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <Border x:Name="border"  CornerRadius="10" BorderBrush="DarkGreen" BorderThickness="6" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ScrollViewer x:Name="PART_ContentHost" Focusable="False" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible"/>
                        </Border>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>


        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="Coral"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="Olive"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="Gray"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="DarkRed"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Button.FontSize" Value="18"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border x:Name="border" CornerRadius="10" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="4" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


    </Page.Resources>

    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="4*"/>
            <ColumnDefinition Width="17*"/>
            <ColumnDefinition Width="32*"/>
            <ColumnDefinition Width="20*"/>
            <ColumnDefinition Width="11*"/>
            <ColumnDefinition Width="6*"/>
            <ColumnDefinition Width="29*"/>
            <ColumnDefinition Width="8*"/>
            <ColumnDefinition Width="22*"/>
            <ColumnDefinition Width="5*"/>
            <ColumnDefinition Width="6*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="31*"/>
            <RowDefinition Height="56*"/>
            <RowDefinition Height="138*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="40*"/>
            <RowDefinition Height="10*"/>
            <RowDefinition Height="115*"/>
            <RowDefinition Height="5*"/>
            <RowDefinition Height="35*"/>
            <RowDefinition Height="10*"/>
        </Grid.RowDefinitions>
        <TextBox x:Name="axiomsTextBox" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" Style="{DynamicResource textBoxStyle}" Grid.Row="1" Grid.Column="1" Grid.RowSpan="2" Grid.ColumnSpan="3"></TextBox>
        <TextBox x:Name="hypothesesTextBox" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" Style="{DynamicResource textBoxStyle}" Grid.Row="6" Grid.Column="1" Grid.ColumnSpan="3" />
        <Button x:Name="axiomsGetter" Content="Ввести Аксиомы" Click="GetAxioms" Grid.Row="4" Grid.Column="2" Style="{DynamicResource ButtonStyle}"   />
        <Button x:Name="hypothesesGetter" Content="Ввести Гипотезы" Click="GetHypotheses" Grid.Row="8" Grid.Column="2" Style="{DynamicResource ButtonStyle}"/>
        <TextBox x:Name="outPutTextBox" HorizontalScrollBarVisibility="Visible" VerticalScrollBarVisibility="Visible" Style="{DynamicResource textBoxStyle}" Grid.Column="5" Grid.Row="1" Grid.RowSpan="6" Grid.ColumnSpan="5"/>
        <Button x:Name="outputGetter" Content="Ввести Решение" Click="GetProof" Grid.Row="8" Grid.Column="6" Style="{DynamicResource ButtonStyle}"/>
        <Button x:Name="saveBtn" Content="Сохранить" Visibility="Hidden" Click="Save" Grid.Row="8" Grid.Column="8" Style="{DynamicResource ButtonStyle}"/>
    </Grid>
</Page>
